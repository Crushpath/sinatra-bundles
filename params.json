{"name":"sinatra-bundles","body":"# Usage\r\n\r\nsinatra-bundles combines Javascript and CSS into one file. Meaning, you can bundle 2 or more Javascript files into one, similar with CSS stylesheets. Any bundled files are expected to be in the public directory, under 'javascripts' and 'stylesheets'\r\n\r\nAssuming you have the following files in public:\r\n\r\n    ./stylesheets/reset.css\r\n    ./stylesheets/fonts.css\r\n    ./stylesheets/grid.css\r\n    ./javascripts/jquery.js\r\n    ./javascripts/lightbox.js\r\n    ./javascripts/blog.js\r\n\r\nYou can bundle these files in your app like this. First, install the gem\r\n\r\n    % [sudo] gem install sinatra-bundles\r\n\r\nAnd include it in your app:\r\n\r\n    require 'sinatra'\r\n    require 'sinatra/bundles'\r\n\r\n    stylesheet_bundle(:all, %w(reset fonts grid))\r\n    javascript_bundle(:all, %w(jquery lightbox blog))\r\n\r\n    get '/' do\r\n      'sinatra-bundles rocks!'\r\n    end\r\n\r\nUsing a Modular style app?\r\n\r\n    require 'sinatra/base'\r\n    require 'sinatra/bundles'\r\n\r\n    class MyApp < Sinatra::Base\r\n      get '/' do\r\n        'sinatra-bundles rocks!'\r\n      end\r\n\r\n      register Sinatra::Bundles\r\n    end\r\n\r\nThen in your view, you can use the view helpers to insert the proper script tags:\r\n\r\n    = javascript_bundle_include_tag(:all)\r\n    = stylesheet_bundle_link_tag(:all)\r\n\r\nAll 6 of those files will be served up in 2 files, and they'll be compressed and have headers and etags set for caching.\r\n\r\nYou can also use wildcard splats.\r\n\r\n    = javascript_bundle(:test, %w(test/*))\r\n\r\nThat will grab all files in the test directory.\r\n\r\n    = javascript_bundle(:test, %w(test/**/*))\r\n\r\nThat will grab all files under the test directory recursively. If you don't specify any files, it defaults to 'all files' recursively.\r\n\r\n    = javascript_bundle(:all)\r\n\r\nFor full docs visit [http://yardoc.org/docs/darkhelmet-sinatra-bundles](http://yardoc.org/docs/darkhelmet-sinatra-bundles)\r\n\r\n# Configuration\r\n\r\nThe defaults are pretty good. In development/test mode:\r\n\r\n    bundle_cache_time # => 60 * 60 * 24 * 365, or 1 year (length of time a bundle will be cached for)\r\n    compress_bundles # => false (compress CSS and Javascript using packr and rainpress)\r\n    cache_bundles # => false (set caching headers)\r\n    stamp_bundles # => true (append a timestamp to the URL as a query param)\r\n    warm_bundle_cache # => false (generate bundle when it is defined)\r\n\r\nAnd in production mode, compression and caching are enabled\r\n\r\n    compress_bundles # => true\r\n    cache_bundles # => true\r\n\r\nTo change any of these, use set/enable/disable\r\n\r\n    require 'sinatra'\r\n    require 'sinatra/bundles'\r\n\r\n    stylesheet_bundle(:all, %w(reset fonts grid))\r\n    javascript_bundle(:all, %w(jquery lightbox blog))\r\n\r\n    disable(:compress_bundles)\r\n    enable(:cache_bundles)\r\n    set(:bundle_cache_time, 60 * 60 * 24)\r\n    disable(:stamp_bundles)\r\n\r\n    get '/' do\r\n      'sinatra-bundles rocks!'\r\n    end\r\n\r\n# Examples\r\n\r\nCheck out the code for my blog for a real example: [darkblog on github](http://github.com/darkhelmet/darkblog)\r\n\r\n# What you Need\r\n\r\n    sinatra >= 1.0\r\n    packr\r\n    rainpress\r\n\r\n# Note on Patches/Pull Requests\r\n\r\n* Fork the project.\r\n* Make your feature addition or bug fix.\r\n* Add tests for it. This is important so I don't break it in a\r\n  future version unintentionally.\r\n* Commit, do not mess with rakefile, version, or history.\r\n  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)\r\n* Send me a pull request. Bonus points for topic branches.\r\n\r\n# Thanks!\r\n\r\n* [Patrick Hogan](http://github.com/pbhogan)\r\n  * Etag support (with specs!)\r\n  * Wildcard globbing\r\n* [docunext](http://github.com/docunext)\r\n  * Custom path prefixes for bundles (instead of 'javascripts' and 'stylesheets')\r\n\r\n# Copyright\r\n\r\nCopyright (c) 2010 Daniel Huckstep. See LICENSE for details.","tagline":"Easy asset packaging for sinatra","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}